Testing the ``0-add_integer`` module
Using ``add_integer``

First import ``add_integer`` from the ``0-add_integer`` module:


>>> add_integer = __import__('0-add_integer').add_integer

Testing:

>>> add_integer(5, 6)
11


>>> add_integer(9.9, 10)
19


>>> add_integer(True, False)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer('a', 10)
Traceback (most recent call last):
...
TypeError: a must be an integer


>>> add_integer(6, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer


>>> add_integer(100, -1.8)
99


>>> add_integer(-12, -10)
-22


>>> add_integer(2.889, None)
Traceback (most recent call last):
...
TypeError: b must be an integer


>>> add_integer(float('inf'), 6)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
